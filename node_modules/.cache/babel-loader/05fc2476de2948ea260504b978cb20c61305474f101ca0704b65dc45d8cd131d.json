{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cric Blast Radio\\\\Desktop\\\\To work on\\\\New folder\\\\Crex Scorecard More Data\\\\frontend\\\\src\\\\components\\\\ui\\\\stars-background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from \"react\";\nimport { cn } from \"../../utils/cn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StarsBackground = ({\n  starDensity = 0.00015,\n  allStarsTwinkle = true,\n  twinkleProbability = 0.7,\n  minTwinkleSpeed = 0.5,\n  maxTwinkleSpeed = 1,\n  className\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const drawStar = useCallback((ctx, x, y, radius, opacity) => {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\n    ctx.fillStyle = `rgba(255, 255, 255, ${opacity})`;\n    ctx.fill();\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    const {\n      width,\n      height\n    } = canvas.getBoundingClientRect();\n    canvas.width = width;\n    canvas.height = height;\n    const stars = [];\n    const area = width * height;\n    const numStars = Math.floor(area * starDensity);\n\n    // Create stars\n    for (let i = 0; i < numStars; i++) {\n      stars.push({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        radius: Math.random() * 0.05 + 0.5,\n        opacity: Math.random() * 0.5 + 0.5,\n        twinkleSpeed: allStarsTwinkle || Math.random() < twinkleProbability ? minTwinkleSpeed + Math.random() * (maxTwinkleSpeed - minTwinkleSpeed) : null\n      });\n    }\n    let animationFrameId;\n    const render = () => {\n      ctx.clearRect(0, 0, width, height);\n      stars.forEach(star => {\n        if (star.twinkleSpeed) {\n          star.opacity = 0.5 + Math.abs(Math.sin(Date.now() * 0.001 / star.twinkleSpeed) * 0.5);\n        }\n        drawStar(ctx, star.x, star.y, star.radius, star.opacity);\n      });\n      animationFrameId = requestAnimationFrame(render);\n    };\n    render();\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n    };\n  }, [starDensity, allStarsTwinkle, twinkleProbability, minTwinkleSpeed, maxTwinkleSpeed, drawStar]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: cn(\"h-full w-full absolute inset-0\", className)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(StarsBackground, \"ZQ4UFidxVbbS+yNoiZMpoh3vBEc=\");\n_c = StarsBackground;\nvar _c;\n$RefreshReg$(_c, \"StarsBackground\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","cn","jsxDEV","_jsxDEV","StarsBackground","starDensity","allStarsTwinkle","twinkleProbability","minTwinkleSpeed","maxTwinkleSpeed","className","_s","canvasRef","drawStar","ctx","x","y","radius","opacity","beginPath","arc","Math","PI","fillStyle","fill","canvas","current","getContext","width","height","getBoundingClientRect","stars","area","numStars","floor","i","push","random","twinkleSpeed","animationFrameId","render","clearRect","forEach","star","abs","sin","Date","now","requestAnimationFrame","cancelAnimationFrame","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cric Blast Radio/Desktop/To work on/New folder/Crex Scorecard More Data/frontend/src/components/ui/stars-background.jsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport { cn } from \"../../utils/cn\";\r\n\r\nexport const StarsBackground = ({\r\n  starDensity = 0.00015,\r\n  allStarsTwinkle = true,\r\n  twinkleProbability = 0.7,\r\n  minTwinkleSpeed = 0.5,\r\n  maxTwinkleSpeed = 1,\r\n  className,\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  const drawStar = useCallback((ctx, x, y, radius, opacity) => {\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n    ctx.fillStyle = `rgba(255, 255, 255, ${opacity})`;\r\n    ctx.fill();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const { width, height } = canvas.getBoundingClientRect();\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    const stars = [];\r\n    const area = width * height;\r\n    const numStars = Math.floor(area * starDensity);\r\n\r\n    // Create stars\r\n    for (let i = 0; i < numStars; i++) {\r\n      stars.push({\r\n        x: Math.random() * width,\r\n        y: Math.random() * height,\r\n        radius: Math.random() * 0.05 + 0.5,\r\n        opacity: Math.random() * 0.5 + 0.5,\r\n        twinkleSpeed: allStarsTwinkle || Math.random() < twinkleProbability\r\n          ? minTwinkleSpeed + Math.random() * (maxTwinkleSpeed - minTwinkleSpeed)\r\n          : null,\r\n      });\r\n    }\r\n\r\n    let animationFrameId;\r\n\r\n    const render = () => {\r\n      ctx.clearRect(0, 0, width, height);\r\n      \r\n      stars.forEach(star => {\r\n        if (star.twinkleSpeed) {\r\n          star.opacity = 0.5 + Math.abs(Math.sin(Date.now() * 0.001 / star.twinkleSpeed) * 0.5);\r\n        }\r\n        drawStar(ctx, star.x, star.y, star.radius, star.opacity);\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(render);\r\n    };\r\n\r\n    render();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n    };\r\n  }, [starDensity, allStarsTwinkle, twinkleProbability, minTwinkleSpeed, maxTwinkleSpeed, drawStar]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className={cn(\"h-full w-full absolute inset-0\", className)}\r\n    />\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}