{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Cric Blast Radio\\\\Desktop\\\\To work on\\\\New folder\\\\Crex Scorecard More Data\\\\frontend\\\\src\\\\components\\\\cricket\\\\ui\\\\stars-background.jsx\",\n  _s = $RefreshSig$();\nimport { cn } from \"../../../lib/utils\";\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StarsBackground = ({\n  starDensity = 0.00025,\n  allStarsTwinkle = true,\n  twinkleProbability = 0.7,\n  minTwinkleSpeed = 0.5,\n  maxTwinkleSpeed = 1,\n  className\n}) => {\n  _s();\n  const [stars, setStars] = useState([]);\n  const canvasRef = useRef(null);\n\n  // Rest of the component code remains the same, just remove TypeScript types\n  // ... (keep all the existing logic)\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: cn(\"h-full w-full absolute inset-0\", className)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(StarsBackground, \"WAdtN+gm1YHzyOYUMo/E549UakE=\");\n_c = StarsBackground;\nvar _c;\n$RefreshReg$(_c, \"StarsBackground\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","cn","React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","StarsBackground","starDensity","allStarsTwinkle","twinkleProbability","minTwinkleSpeed","maxTwinkleSpeed","className","stars","setStars","canvasRef","ref","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cric Blast Radio/Desktop/To work on/New folder/Crex Scorecard More Data/frontend/src/components/cricket/ui/stars-background.jsx"],"sourcesContent":["\"use client\";\r\nimport { cn } from \"../../../lib/utils\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\n\r\nexport const StarsBackground = ({\r\n  starDensity = 0.00025,\r\n  allStarsTwinkle = true,\r\n  twinkleProbability = 0.7,\r\n  minTwinkleSpeed = 0.5,\r\n  maxTwinkleSpeed = 1,\r\n  className,\r\n}) => {\r\n  const [stars, setStars] = useState([]);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Rest of the component code remains the same, just remove TypeScript types\r\n  // ... (keep all the existing logic)\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      className={cn(\"h-full w-full absolute inset-0\", className)}\r\n    />\r\n  );\r\n}; "],"mappings":"AAAA,YAAY;;AAAC,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AACb,SAASC,EAAE,QAAQ,oBAAoB;AACvC,OAAOC,KAAK,IACVC,QAAQ,EACRC,SAAS,EACTC,MAAM,EACNC,WAAW,QACN,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEf,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAC9BC,WAAW,GAAG,OAAO;EACrBC,eAAe,GAAG,IAAI;EACtBC,kBAAkB,GAAG,GAAG;EACxBC,eAAe,GAAG,GAAG;EACrBC,eAAe,GAAG,CAAC;EACnBC;AACF,CAAC,KAAK;EAAAhB,EAAA;EACJ,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMe,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA;;EAEA,oBACEG,OAAA;IACEW,GAAG,EAAED,SAAU;IACfH,SAAS,EAAEd,EAAE,CAAC,gCAAgC,EAAEc,SAAS;EAAE;IAAAK,QAAA,EAAAtB,YAAA;IAAAuB,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEN,CAAC;AAACvB,EAAA,CApBWU,eAAe;AAAAc,EAAA,GAAfd,eAAe;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}