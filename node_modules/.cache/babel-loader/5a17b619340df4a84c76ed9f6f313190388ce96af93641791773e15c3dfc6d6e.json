{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cric Blast Radio\\\\Desktop\\\\To work on\\\\New folder\\\\Crex Scorecard More Data\\\\frontend\\\\src\\\\components\\\\cricket\\\\components\\\\WeatherDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDisplay = ({\n  weatherData\n}) => {\n  _s();\n  var _weatherData$weather$, _weatherData$weather$2, _weatherData$weather$3, _weatherData$weather$4, _weatherData$weather$5, _weatherData$weather$6;\n  const [displayIndex, setDisplayIndex] = useState(0);\n  useEffect(() => {\n    // Rotate display every 10 seconds\n    const interval = setInterval(() => {\n      setDisplayIndex(prev => (prev + 1) % 10); // Now rotating through 10 states (removed pressure)\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Return null if no weather data\n  if (!weatherData || !weatherData.main) return null;\n\n  // Convert wind speed from m/s to km/h\n  const windSpeedKmh = Math.round(weatherData.wind.speed * 3.6);\n\n  // Convert visibility from meters to kilometers\n  const visibilityKm = Math.round(weatherData.visibility / 1000);\n\n  // Convert Unix timestamps to local time\n  const formatTime = timestamp => {\n    return new Date(timestamp * 1000).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  // All possible weather displays\n  const weatherInfo = [\n  // City name\n  {\n    icon: \"üìç\",\n    text: `${weatherData.name}, ${weatherData.sys.country}`\n  },\n  // Weather condition\n  {\n    icon: ((_weatherData$weather$ = weatherData.weather[0]) === null || _weatherData$weather$ === void 0 ? void 0 : _weatherData$weather$.main) === \"Clear\" ? \"‚òÄÔ∏è\" : ((_weatherData$weather$2 = weatherData.weather[0]) === null || _weatherData$weather$2 === void 0 ? void 0 : _weatherData$weather$2.main) === \"Rain\" ? \"üåßÔ∏è\" : ((_weatherData$weather$3 = weatherData.weather[0]) === null || _weatherData$weather$3 === void 0 ? void 0 : _weatherData$weather$3.main) === \"Clouds\" ? \"‚òÅÔ∏è\" : ((_weatherData$weather$4 = weatherData.weather[0]) === null || _weatherData$weather$4 === void 0 ? void 0 : _weatherData$weather$4.main) === \"Snow\" ? \"‚ùÑÔ∏è\" : \"üå§Ô∏è\",\n    text: `${(_weatherData$weather$5 = weatherData.weather[0]) === null || _weatherData$weather$5 === void 0 ? void 0 : (_weatherData$weather$6 = _weatherData$weather$5.main) === null || _weatherData$weather$6 === void 0 ? void 0 : _weatherData$weather$6.toUpperCase()}`\n  },\n  // Current temperature\n  {\n    icon: \"üå°Ô∏è\",\n    text: `TEMP ${Math.round(weatherData.main.temp)}¬∞C`\n  },\n  // Feels like\n  {\n    icon: \"üå°Ô∏è\",\n    text: `FEELS ${Math.round(weatherData.main.feels_like)}¬∞C`\n  },\n  // Temperature range\n  {\n    icon: \"üå§Ô∏è\",\n    text: `RANGE ${Math.round(weatherData.main.temp_min)}¬∞-${Math.round(weatherData.main.temp_max)}¬∞C`\n  },\n  // Wind info\n  {\n    icon: \"üí®\",\n    text: `WIND ${windSpeedKmh}km/h ${weatherData.wind.deg}¬∞`\n  },\n  // Humidity\n  {\n    icon: \"üíß\",\n    text: `HUMIDITY ${weatherData.main.humidity}%`\n  },\n  // Visibility\n  {\n    icon: \"üëÅÔ∏è\",\n    text: `VISIBILITY ${visibilityKm}km`\n  },\n  // Cloudiness\n  {\n    icon: \"‚òÅÔ∏è\",\n    text: `CLOUDS ${weatherData.clouds.all}%`\n  },\n  // Sunrise/Sunset\n  {\n    icon: \"üåÖ\",\n    text: `SUN ${formatTime(weatherData.sys.sunrise)}-${formatTime(weatherData.sys.sunset)}`\n  }];\n\n  // Get current display info\n  const currentWeather = weatherInfo[displayIndex];\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"text-4xl font-bold whitespace-nowrap flex items-center gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-blue-400/80\",\n      children: currentWeather.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), currentWeather.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherDisplay, \"YwPI8t0LE/IOVXMCgtxzVxHnbqw=\");\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherDisplay","weatherData","_s","_weatherData$weather$","_weatherData$weather$2","_weatherData$weather$3","_weatherData$weather$4","_weatherData$weather$5","_weatherData$weather$6","displayIndex","setDisplayIndex","interval","setInterval","prev","clearInterval","main","windSpeedKmh","Math","round","wind","speed","visibilityKm","visibility","formatTime","timestamp","Date","toLocaleTimeString","hour","minute","hour12","weatherInfo","icon","text","name","sys","country","weather","toUpperCase","temp","feels_like","temp_min","temp_max","deg","humidity","clouds","all","sunrise","sunset","currentWeather","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Cric Blast Radio/Desktop/To work on/New folder/Crex Scorecard More Data/frontend/src/components/cricket/components/WeatherDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WeatherDisplay = ({ weatherData }) => {\n  const [displayIndex, setDisplayIndex] = useState(0);\n  \n  useEffect(() => {\n    // Rotate display every 10 seconds\n    const interval = setInterval(() => {\n      setDisplayIndex((prev) => (prev + 1) % 10); // Now rotating through 10 states (removed pressure)\n    }, 10000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  // Return null if no weather data\n  if (!weatherData || !weatherData.main) return null;\n\n  // Convert wind speed from m/s to km/h\n  const windSpeedKmh = Math.round(weatherData.wind.speed * 3.6);\n\n  // Convert visibility from meters to kilometers\n  const visibilityKm = Math.round(weatherData.visibility / 1000);\n\n  // Convert Unix timestamps to local time\n  const formatTime = (timestamp) => {\n    return new Date(timestamp * 1000).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  // All possible weather displays\n  const weatherInfo = [\n    // City name\n    {\n      icon: \"üìç\",\n      text: `${weatherData.name}, ${weatherData.sys.country}`\n    },\n    // Weather condition\n    {\n      icon: weatherData.weather[0]?.main === \"Clear\" ? \"‚òÄÔ∏è\" :\n            weatherData.weather[0]?.main === \"Rain\" ? \"üåßÔ∏è\" :\n            weatherData.weather[0]?.main === \"Clouds\" ? \"‚òÅÔ∏è\" :\n            weatherData.weather[0]?.main === \"Snow\" ? \"‚ùÑÔ∏è\" : \"üå§Ô∏è\",\n      text: `${weatherData.weather[0]?.main?.toUpperCase()}`\n    },\n    // Current temperature\n    {\n      icon: \"üå°Ô∏è\",\n      text: `TEMP ${Math.round(weatherData.main.temp)}¬∞C`\n    },\n    // Feels like\n    {\n      icon: \"üå°Ô∏è\",\n      text: `FEELS ${Math.round(weatherData.main.feels_like)}¬∞C`\n    },\n    // Temperature range\n    {\n      icon: \"üå§Ô∏è\",\n      text: `RANGE ${Math.round(weatherData.main.temp_min)}¬∞-${Math.round(weatherData.main.temp_max)}¬∞C`\n    },\n    // Wind info\n    {\n      icon: \"üí®\",\n      text: `WIND ${windSpeedKmh}km/h ${weatherData.wind.deg}¬∞`\n    },\n    // Humidity\n    {\n      icon: \"üíß\",\n      text: `HUMIDITY ${weatherData.main.humidity}%`\n    },\n    // Visibility\n    {\n      icon: \"üëÅÔ∏è\",\n      text: `VISIBILITY ${visibilityKm}km`\n    },\n    // Cloudiness\n    {\n      icon: \"‚òÅÔ∏è\",\n      text: `CLOUDS ${weatherData.clouds.all}%`\n    },\n    // Sunrise/Sunset\n    {\n      icon: \"üåÖ\",\n      text: `SUN ${formatTime(weatherData.sys.sunrise)}-${formatTime(weatherData.sys.sunset)}`\n    }\n  ];\n\n  // Get current display info\n  const currentWeather = weatherInfo[displayIndex];\n\n  return (\n    <span className=\"text-4xl font-bold whitespace-nowrap flex items-center gap-3\">\n      <span className=\"text-blue-400/80\">{currentWeather.icon}</span>\n      {currentWeather.text}\n    </span>\n  );\n};\n\nexport default WeatherDisplay; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,eAAe,CAAEG,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACV,WAAW,IAAI,CAACA,WAAW,CAACc,IAAI,EAAE,OAAO,IAAI;;EAElD;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACjB,WAAW,CAACkB,IAAI,CAACC,KAAK,GAAG,GAAG,CAAC;;EAE7D;EACA,MAAMC,YAAY,GAAGJ,IAAI,CAACC,KAAK,CAACjB,WAAW,CAACqB,UAAU,GAAG,IAAI,CAAC;;EAE9D;EACA,MAAMC,UAAU,GAAIC,SAAS,IAAK;IAChC,OAAO,IAAIC,IAAI,CAACD,SAAS,GAAG,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;MAC5DC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG;EAClB;EACA;IACEC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,GAAG/B,WAAW,CAACgC,IAAI,KAAKhC,WAAW,CAACiC,GAAG,CAACC,OAAO;EACvD,CAAC;EACD;EACA;IACEJ,IAAI,EAAE,EAAA5B,qBAAA,GAAAF,WAAW,CAACmC,OAAO,CAAC,CAAC,CAAC,cAAAjC,qBAAA,uBAAtBA,qBAAA,CAAwBY,IAAI,MAAK,OAAO,GAAG,IAAI,GAC/C,EAAAX,sBAAA,GAAAH,WAAW,CAACmC,OAAO,CAAC,CAAC,CAAC,cAAAhC,sBAAA,uBAAtBA,sBAAA,CAAwBW,IAAI,MAAK,MAAM,GAAG,KAAK,GAC/C,EAAAV,sBAAA,GAAAJ,WAAW,CAACmC,OAAO,CAAC,CAAC,CAAC,cAAA/B,sBAAA,uBAAtBA,sBAAA,CAAwBU,IAAI,MAAK,QAAQ,GAAG,IAAI,GAChD,EAAAT,sBAAA,GAAAL,WAAW,CAACmC,OAAO,CAAC,CAAC,CAAC,cAAA9B,sBAAA,uBAAtBA,sBAAA,CAAwBS,IAAI,MAAK,MAAM,GAAG,IAAI,GAAG,KAAK;IAC5DiB,IAAI,EAAE,IAAAzB,sBAAA,GAAGN,WAAW,CAACmC,OAAO,CAAC,CAAC,CAAC,cAAA7B,sBAAA,wBAAAC,sBAAA,GAAtBD,sBAAA,CAAwBQ,IAAI,cAAAP,sBAAA,uBAA5BA,sBAAA,CAA8B6B,WAAW,CAAC,CAAC;EACtD,CAAC;EACD;EACA;IACEN,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,QAAQf,IAAI,CAACC,KAAK,CAACjB,WAAW,CAACc,IAAI,CAACuB,IAAI,CAAC;EACjD,CAAC;EACD;EACA;IACEP,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,SAASf,IAAI,CAACC,KAAK,CAACjB,WAAW,CAACc,IAAI,CAACwB,UAAU,CAAC;EACxD,CAAC;EACD;EACA;IACER,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,SAASf,IAAI,CAACC,KAAK,CAACjB,WAAW,CAACc,IAAI,CAACyB,QAAQ,CAAC,KAAKvB,IAAI,CAACC,KAAK,CAACjB,WAAW,CAACc,IAAI,CAAC0B,QAAQ,CAAC;EAChG,CAAC;EACD;EACA;IACEV,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,QAAQhB,YAAY,QAAQf,WAAW,CAACkB,IAAI,CAACuB,GAAG;EACxD,CAAC;EACD;EACA;IACEX,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,YAAY/B,WAAW,CAACc,IAAI,CAAC4B,QAAQ;EAC7C,CAAC;EACD;EACA;IACEZ,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,cAAcX,YAAY;EAClC,CAAC;EACD;EACA;IACEU,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,UAAU/B,WAAW,CAAC2C,MAAM,CAACC,GAAG;EACxC,CAAC;EACD;EACA;IACEd,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,OAAOT,UAAU,CAACtB,WAAW,CAACiC,GAAG,CAACY,OAAO,CAAC,IAAIvB,UAAU,CAACtB,WAAW,CAACiC,GAAG,CAACa,MAAM,CAAC;EACxF,CAAC,CACF;;EAED;EACA,MAAMC,cAAc,GAAGlB,WAAW,CAACrB,YAAY,CAAC;EAEhD,oBACEV,OAAA;IAAMkD,SAAS,EAAC,8DAA8D;IAAAC,QAAA,gBAC5EnD,OAAA;MAAMkD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEF,cAAc,CAACjB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAC9DN,cAAc,CAAChB,IAAI;EAAA;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEX,CAAC;AAACpD,EAAA,CAhGIF,cAAc;AAAAuD,EAAA,GAAdvD,cAAc;AAkGpB,eAAeA,cAAc;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}